/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package view;

import dao.CategoriaDAO;
import dao.ReceitasDAO;
import dao.Conexao;
import dao.CozinheiroDAO;
import dao.Ingredientes_receitaDAO;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.categoria;
import model.cozinheiro;
import model.ingredientes;
import model.ingredientes_receita;
import model.receitas;

/**
 *
 * @author Matheus
 */
public class receitasView extends javax.swing.JFrame {

    /** Creates new form categoriaView */
    private Dialogo tela;
    public receitasView() {
        initComponents();
        tela = new Dialogo(this, true);
        try {
            readTable();
        } catch (SQLException ex) {
            Logger.getLogger(receitasView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void readTable() throws SQLException{
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setNumRows(0);
        Connection conexao = new Conexao().getConnection();
        ReceitasDAO receitasbanco = new ReceitasDAO(conexao);
        for(receitas p: receitasbanco.selectALL()){
            modelo.addRow(new Object[]{
                p.getCod_receita(),
                p.getNome_receita(),
                p.getCozinheiro().getNome_fantasia(),
                p.getCategoria().getCod_categoria(),
                p.getDt_criacao()
            });
        }
    }
    public void readDesc(String desc) throws SQLException{
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setNumRows(0);
        Connection conexao = new Conexao().getConnection();
        ReceitasDAO receitasbanco = new ReceitasDAO(conexao);
        for(receitas p: receitasbanco.readDesc(desc)){
            modelo.addRow(new Object[]{
                p.getCod_receita(),
                p.getNome_receita(),
                p.getCozinheiro().getNome_fantasia(),
                p.getCategoria().getCod_categoria(),
                p.getDt_criacao()
            });
    }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldCod_Receita = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNome_receita = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        CADASTRAR = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ATUALIZAR = new javax.swing.JButton();
        DELETAR = new javax.swing.JButton();
        jTextFieldBusca = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonBusca = new javax.swing.JButton();
        jTextFieldNome_Chef = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldCAT = new javax.swing.JTextField();
        jTextFieldData = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextFieldCod_Receita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCod_ReceitaActionPerformed(evt);
            }
        });

        jLabel1.setText("Cod_Receita");

        jLabel2.setText("Nome_Receita");

        CADASTRAR.setText("Salvar");
        CADASTRAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CADASTRARActionPerformed(evt);
            }
        });

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "COD_RECEITA", "NOME_RECEITA", "NOME_CHEFE", "COD_CATEGORIA", "DATA"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
        );

        ATUALIZAR.setText("Atualizar");
        ATUALIZAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ATUALIZARActionPerformed(evt);
            }
        });

        DELETAR.setText("Deletar");
        DELETAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETARActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("RECEITAS");

        jButtonBusca.setText("Buscar");
        jButtonBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscaActionPerformed(evt);
            }
        });

        jLabel4.setText("Nome_Chefe");

        jLabel5.setText("Cod_Categoria");

        jLabel6.setText("Data_Criacao");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldCod_Receita, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldNome_receita, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNome_Chef, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(CADASTRAR)
                        .addGap(34, 34, 34)
                        .addComponent(ATUALIZAR)
                        .addGap(18, 18, 18)
                        .addComponent(DELETAR)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBusca)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldCAT, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(96, 96, 96))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCod_Receita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNome_receita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNome_Chef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CADASTRAR)
                    .addComponent(ATUALIZAR)
                    .addComponent(DELETAR))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBusca))
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CADASTRARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CADASTRARActionPerformed
        if(jTextFieldCod_Receita.getText().isEmpty() || jTextFieldNome_receita.getText().isEmpty() ||jTextFieldCAT.getText().isEmpty()||jTextFieldData.getText().isEmpty()||jTextFieldNome_Chef.getText().isEmpty() ){
             JOptionPane.showMessageDialog(null,"CAMPO VAZIO");
        }else{
            int cod_receita = Integer.parseInt(jTextFieldCod_Receita.getText());
            String nome_receita = jTextFieldNome_receita.getText();
            String data_criacao = jTextFieldData.getText();
            cozinheiro cozinheiro = new cozinheiro();
            cozinheiro.setNome_fantasia(jTextFieldNome_Chef.getText());
            categoria categoria = new categoria();
            categoria.setCod_categoria(Integer.parseInt(jTextFieldCAT.getText()));
            
            receitas receitas_tela = new receitas(cod_receita, nome_receita, data_criacao, cozinheiro, categoria);
        
            try {
                //categoriabanco precisa da conexao com o banco pra inserir
                Connection conexao = new Conexao().getConnection();
                Ingredientes_receitaDAO ingrebanco = new Ingredientes_receitaDAO(conexao);
                ReceitasDAO receitasbanco = new ReceitasDAO(conexao);
                CozinheiroDAO cozinheirobanco = new CozinheiroDAO(conexao);
                CategoriaDAO categoriabanco = new CategoriaDAO(conexao);
                boolean existir = receitasbanco.validar(receitas_tela);
                boolean existircozinheiro = cozinheirobanco.validar(receitas_tela.getCozinheiro());
                boolean existircategoria = categoriabanco.validar(receitas_tela.getCategoria());
                if(existir){
                    JOptionPane.showMessageDialog(null,"Receita ja cadastrada");
                }else if(existircozinheiro && existircategoria){
                    //abrir telinha ingrediente
                    tela.setVisible(true);
                    ArrayList<ingredientes_receita> listaingre = new ArrayList<>();
                    listaingre = tela.getLista();
                    if(listaingre.isEmpty()){
                       JOptionPane.showMessageDialog(null,"Erro ao cadastrar receita");
                    }else{
                        receitasbanco.insert(receitas_tela);
                        for (ingredientes_receita i: listaingre) {
                            ingredientes_receita ingretela = new ingredientes_receita(Integer.parseInt(jTextFieldCod_Receita.getText()), jTextFieldNome_Chef.getText(), i.getNome_ingrediente(), i.getCoid_ngredientee(), i.getQuant_ingredientee());
                            ingrebanco.insert(ingretela);
                       }
                       JOptionPane.showMessageDialog(null,"Receita Cadastrada com Sucesso"); 
                       tela.getLista().clear();
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null,"Cod_Categoria e Nome_Chef precisam estar no banco");
                }
                readTable(); 
                jTextFieldNome_receita.setText("");
                jTextFieldCod_Receita.setText("");
                jTextFieldCAT.setText("");
                jTextFieldData.setText("");
                jTextFieldNome_Chef.setText("");


            } catch (SQLException ex) {
                Logger.getLogger(receitasView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }   
        
            
    }//GEN-LAST:event_CADASTRARActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
         if(jTable1.getSelectedRow() != -1){
            jTextFieldCod_Receita.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            jTextFieldNome_receita.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
            jTextFieldNome_Chef.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
            jTextFieldCAT.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
            jTextFieldData.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());

        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        // TODO add your handling code here:
        if(jTable1.getSelectedRow() != -1){
            jTextFieldCod_Receita.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            jTextFieldNome_receita.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
            jTextFieldNome_Chef.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
            jTextFieldCAT.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
            jTextFieldData.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());

        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void ATUALIZARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ATUALIZARActionPerformed
        if(jTextFieldCod_Receita.getText().isEmpty() || jTextFieldNome_receita.getText().isEmpty() ||jTextFieldCAT.getText().isEmpty()||jTextFieldData.getText().isEmpty()||jTextFieldNome_Chef.getText().isEmpty() ){
             JOptionPane.showMessageDialog(null,"CAMPO VAZIO");
        }else{
            int cod_receita = Integer.parseInt(jTextFieldCod_Receita.getText());
            String nome_receita = jTextFieldNome_receita.getText();
            String data_criacao = jTextFieldData.getText();
            cozinheiro cozinheiro = new cozinheiro();
            cozinheiro.setNome_fantasia(jTextFieldNome_Chef.getText());
            categoria categoria = new categoria();
            categoria.setCod_categoria(Integer.parseInt(jTextFieldCAT.getText()));
            
        
            receitas receitas_tela = new receitas(cod_receita, nome_receita, data_criacao, cozinheiro, categoria);
        
            try {
                //categoriabanco precisa da conexao com o banco pra inserir
                Connection conexao = new Conexao().getConnection();
                ReceitasDAO receitasbanco = new ReceitasDAO(conexao);
                CozinheiroDAO cozinheirobanco = new CozinheiroDAO(conexao);
                CategoriaDAO categoriabanco = new CategoriaDAO(conexao);
                boolean existircozinheiro = cozinheirobanco.validar(receitas_tela.getCozinheiro());
                boolean existircategoria = categoriabanco.validar(receitas_tela.getCategoria());
                if(existircozinheiro && existircategoria){
                    receitasbanco.update(receitas_tela);
                    JOptionPane.showMessageDialog(null,"Receita atualizada com sucesso!!!");
                    readTable();
                    jTextFieldNome_receita.setText("");
                    jTextFieldCod_Receita.setText("");
                    jTextFieldCAT.setText("");
                    jTextFieldData.setText("");
                    jTextFieldNome_Chef.setText("");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Cod_Categoria e Nome_Chef precisam estar no banco");
                }
               

            } catch (SQLException ex) {
                Logger.getLogger(receitasView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }   
    }//GEN-LAST:event_ATUALIZARActionPerformed

    private void jTextFieldCod_ReceitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCod_ReceitaActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextFieldCod_ReceitaActionPerformed

    private void DELETARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETARActionPerformed
        // TODO add your handling code here:
        if(jTextFieldCod_Receita.getText().isEmpty() || jTextFieldNome_receita.getText().isEmpty() ||jTextFieldCAT.getText().isEmpty()||jTextFieldData.getText().isEmpty()||jTextFieldNome_Chef.getText().isEmpty() ){
             JOptionPane.showMessageDialog(null,"CAMPO VAZIO");
        }else{
            int cod_receita = Integer.parseInt(jTextFieldCod_Receita.getText());
            String nome_receita = jTextFieldNome_receita.getText();
            String data_criacao = jTextFieldData.getText();
            cozinheiro cozinheiro = new cozinheiro();
            cozinheiro.setNome_fantasia(jTextFieldNome_Chef.getText());
            categoria categoria = new categoria();
            categoria.setCod_categoria(Integer.parseInt(jTextFieldCAT.getText()));
            
        
            receitas receitas_tela = new receitas(cod_receita, nome_receita, data_criacao, cozinheiro, categoria);
            ingredientes_receita ingretela = new ingredientes_receita(Integer.parseInt(jTextFieldCod_Receita.getText()), jTextFieldNome_Chef.getText(), "", 1, 1);
            try {
                //categoriabanco precisa da conexao com o banco pra inserir
                Connection conexao = new Conexao().getConnection();
                ReceitasDAO receitasbanco = new ReceitasDAO(conexao);
                Ingredientes_receitaDAO ingrebanco = new Ingredientes_receitaDAO(conexao);
                ingrebanco.delete(ingretela);
                receitasbanco.delete(receitas_tela);
                JOptionPane.showMessageDialog(null,"Receita removida com sucesso!!!");
                readTable();
                jTextFieldNome_receita.setText("");
                jTextFieldCod_Receita.setText("");
                jTextFieldCAT.setText("");
                jTextFieldData.setText("");
                jTextFieldNome_Chef.setText("");
               

            } catch (SQLException ex) {
                Logger.getLogger(receitasView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }   
    }//GEN-LAST:event_DELETARActionPerformed

    private void jButtonBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscaActionPerformed
        if(jTextFieldBusca.getText().isEmpty()){
           JOptionPane.showMessageDialog(null,"CAMPO VAZIO");
        }
        else{
           try {
            readDesc(jTextFieldBusca.getText());
        } catch (SQLException ex) {
            Logger.getLogger(receitasView.class.getName()).log(Level.SEVERE, null, ex);
        } 
        }
        
    }//GEN-LAST:event_jButtonBuscaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(receitasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(receitasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(receitasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(receitasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new receitasView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ATUALIZAR;
    private javax.swing.JButton CADASTRAR;
    private javax.swing.JButton DELETAR;
    private javax.swing.JButton jButtonBusca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldBusca;
    private javax.swing.JTextField jTextFieldCAT;
    private javax.swing.JTextField jTextFieldCod_Receita;
    private javax.swing.JTextField jTextFieldData;
    private javax.swing.JTextField jTextFieldNome_Chef;
    private javax.swing.JTextField jTextFieldNome_receita;
    // End of variables declaration//GEN-END:variables

 

}
